[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.12.7,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0",
    # Payment Provider SDK BEGIN
    "stripe>=5.0.0",
    "paypal-server-sdk==0.5.1",
    # Payment Provider SDK END
    # Redis & Celery message brokers BEGIN
    "aio-pika<9.4.3",
    "aioredis<2.0.1",
    "aiormq==6.8.1",
    "amqp<5.2.0",
    "celery[redis]<5.4.0",    
    "redis<5.1.0,>=5.0.7",
    "pika<1.3.2",
    "authlib<1.3.2",
    # Messagge Brokers END
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "mjml<0.11.0",
    # MaxMind GeoIP BEGIN
    "geoip2<4.8.0",    
    "maxminddb==2.6.2",
    # GEOIP END
    "kombu<5.4.2",
    "loguru<0.7.2",
    "requests==2.32.3",
    "itsdangerous==2.2.0",
    "json_log_formatter<1.1",
    # MongoDB BEGIN
    "dnspython<=2.7.0",
    "motor<=3.6.0",
    "pymongo<=4.9.2",
    # MongoDB END
    "qrcode<8.0",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.2.0",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "gunicorn>=20.1.0",
    "uvicorn[standard]>=0.30.6",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
